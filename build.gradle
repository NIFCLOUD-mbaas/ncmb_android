apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:6.7.1'
    }
}

version = '4.1.1'
group = 'com.nifcloud.mbaas'

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}
android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        minSdkVersion 14
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'GradleDependency'
        lintConfig file("lint.xml")
    }
}


repositories {
    google()
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.firebase:firebase-messaging:22.0.0'
    implementation 'com.google.android.gms:play-services-base:17.6.0'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.annotation:annotation:1.0.0"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:3.0"
    testImplementation 'org.robolectric:shadows-httpclient:3.0'
    testImplementation 'com.squareup.okhttp:mockwebserver:2.3.0'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.5'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.5'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.5'
    testImplementation 'org.powermock:powermock-classloading-xstream:1.6.5'
    testImplementation 'org.yaml:snakeyaml:1.15'
    testImplementation 'org.skyscreamer:jsonassert:1.2.3'
    testImplementation "org.robolectric:shadows-play-services:3.0"
    testImplementation "org.robolectric:shadows-support-v4:3.0"

}

task clearJar(type: Delete) {
    delete 'build/libs/' + JAR_NAME
}
task makeJar(type: Copy) {
    from('build/intermediates/intermediate-jars/release')
    into('release/')
    include('classes.jar')
    rename('classes.jar', JAR_NAME)
}
makeJar.dependsOn(clearJar, build)

ext.sharedManifest = manifest {
    attributes(
            "Implementation-Title": project.name,
            "Implementation-Version": version,
            "Implementation-Vendor": project.group,
            "Bundle-Vendor": project.group
    )
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
    manifest {
        from sharedManifest
    }
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task generateReference (type:Javadoc) {
    description = 'Generates API documents for Reference'
    source = android.sourceSets.main.java.srcDirs
    destinationDir = reporting.file("docs")
    options.charSet("utf-8")
    options.showFromPublic()
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    useGpgCmd()
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives{
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'ncmb_android'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'NIFCLOUD mobile backend Android SDK'
                url 'https://github.com/NIFCLOUD-mbaas/ncmb_android#readme'

                scm {
                    connection 'scm:git:https://github.com/NIFCLOUD-mbaas/ncmb_android.git'
                    developerConnection 'scm:git:https://github.com/NIFCLOUD-mbaas/ncmb_android.git'
                    url 'https://github.com/NIFCLOUD-mbaas/ncmb_android'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'https://github.com/NIFCLOUD-mbaas/ncmb_android/blob/master/LICENCE'
                    }
                }

                developers {
                    developer {
                        id 'ncmbsdk'
                        name 'NCMB SDK Team'
                    }
                }
            }
        }
    }
}
